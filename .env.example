# ================================================
# Claude Code UI - Environment Configuration
# ================================================
# Copy this file to .env.docker and customize your settings
# ================================================

# ---------------- Server Configuration ----------------
# Backend API server port (inside container)
PORT=9999

# Frontend development server port (if running in dev mode)
VITE_PORT=9999

# Node environment (production/development)
NODE_ENV=production

# Session secret for JWT (generate a strong random key)
# SESSION_SECRET=your-very-secret-key-here

# ---------------- External Ports Mapping ----------------
# External port for accessing the application
# This is the port you'll use to access the app from your browser
EXTERNAL_PORT=9998

# ---------------- Database Configuration ----------------
# Database file location (relative to /app)
DB_PATH=./data/auth.db

# ---------------- User Paths Configuration ----------------
# Host user home directory (for mounting project files)
HOST_HOME=/home/zhuzhe

# Host workspace directory (where your projects are)
HOST_WORKSPACE=/home/zhuzhe/Workspace

# Container user home directory
CONTAINER_HOME=/home/nodejs

# ---------------- Claude Code Configuration ----------------
# IMPORTANT: You must first install and authenticate Claude Code on your host:
# 1. curl -fsSL https://claude.ai/install.sh | sh
# 2. claude setup-token
# 
# Docker will mount ~/.claude directory containing your credentials
# Verify ~/.claude/.credentials.json exists before starting

# Optional: Set API key directly (not needed if using mounted credentials)
# ANTHROPIC_API_KEY=sk-ant-api03-your-key-here

# Optional: OpenAI API key for Voice Input transcription (Whisper)
# Only needed if you want to use the voice input feature
# OPENAI_API_KEY=sk-your-openai-key-here

# ---------------- Shell Configuration ----------------
# Default shell for terminal sessions
DEFAULT_SHELL=bash

# Shell timeout in milliseconds (0 = no timeout)
SHELL_TIMEOUT=0

# ---------------- Security Configuration ----------------
# Enable/disable authentication (set to false to skip login)
ENABLE_AUTH=false

# Maximum file upload size (in bytes)
MAX_FILE_SIZE=10485760

# Allowed file extensions for upload (comma-separated)
ALLOWED_EXTENSIONS=.txt,.md,.js,.jsx,.ts,.tsx,.json,.yml,.yaml,.css,.html,.py,.go,.java,.cpp,.c,.h,.rs,.php,.rb,.sh

# ---------------- Performance Configuration ----------------
# Maximum number of concurrent WebSocket connections
MAX_WS_CONNECTIONS=10

# Request rate limiting (requests per minute)
RATE_LIMIT_RPM=60

# Enable/disable response caching
ENABLE_CACHE=true

# Cache TTL in seconds
CACHE_TTL=3600

# ---------------- Monitoring & Logging ----------------
# Log level (error/warn/info/debug)
LOG_LEVEL=info

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Log file location (use 'stdout' for console only)
LOG_FILE=stdout

# ---------------- Feature Flags ----------------
# Enable voice input feature
ENABLE_VOICE_INPUT=true

# Enable Monaco editor
ENABLE_MONACO_EDITOR=true

# Enable Git integration
ENABLE_GIT=true

# Enable Shell/Terminal
ENABLE_SHELL=true

# Enable file browser
ENABLE_FILE_BROWSER=true

# ---------------- Language & Localization ----------------
# Default language (en/zh)
DEFAULT_LANGUAGE=en

# Available languages (comma-separated)
AVAILABLE_LANGUAGES=en,zh

# ---------------- Custom LLM/TTS Configuration (Optional) ----------------
# For offline/custom deployments

# Custom LLM API endpoint (leave empty to use default)
# CUSTOM_LLM_ENDPOINT=http://your-llm-server:8080/v1

# Custom LLM API key
# CUSTOM_LLM_API_KEY=your-api-key

# Custom LLM model name
# CUSTOM_LLM_MODEL=gpt-4

# Custom TTS API endpoint
# CUSTOM_TTS_ENDPOINT=http://your-tts-server:5000/api/tts

# Custom TTS API key
# CUSTOM_TTS_API_KEY=your-tts-key

# ---------------- Network Configuration ----------------
# Server bind address (0.0.0.0 for all interfaces)
BIND_ADDRESS=0.0.0.0

# Enable CORS (for API access from different origins)
ENABLE_CORS=true

# CORS allowed origins (comma-separated, * for all)
CORS_ORIGINS=*

# ---------------- Docker Health Check ----------------
# Health check endpoint
HEALTH_CHECK_PATH=/health

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# ---------------- Development Settings ----------------
# Enable hot reload (development only)
ENABLE_HOT_RELOAD=false

# Enable source maps (development only)
ENABLE_SOURCE_MAPS=false

# Verbose error messages (development only)
VERBOSE_ERRORS=false